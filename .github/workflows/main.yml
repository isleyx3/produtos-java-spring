name: CI-CD
on:
  push: 
    branches: ["main"]
    paths-ignore:
      - '.github/**'
  workflow_dispatch:
env:
    PROJECT_ID: bx-icloud-sandbox
    GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
    GKE_CLUSTER: cluster-triplox3    # TODO: update to cluster name
    GKE_ZONE: us-central1-a   # TODO: update to cluster zone
    DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
    REPOSITORY: imagem-pruebas # TODO: update to Artifact Registry docker repository
    IMAGE: front-site-t4f
 
jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
   
    steps:
      - name: Obter código
        uses: actions/checkout@v4.1.3

      - id: 'auth'
      - name: Obter Credencial GCP
        uses: 'google-github-actions/auth@v2'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
         token_format: 'access_token'

      - name: Docker configuration
        run: |-
         echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev          
  
      - name: Build
        run: |-
         docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \

      - name: Publish
        run: |-
         docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
  
  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Obter código
        uses: actions/checkout@v4.1.3
    
      - id: 'auth'
      - name: Obter Credencial GCP
        uses: 'google-github-actions/auth@v2'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
         token_format: 'access_token'
      
      - id: 'get-credentials'
      - name: Acessando o Cluster GKE
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
         cluster_name: 'my-cluster'
         location: 'us-central1-a'

         # Set up kustomize
      - name: Set up Kustomize
        run: |-
         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
         chmod u+x ./kustomize

         - name: Deploy
         run: |-
         # replacing the image name in the k8s template
         cd /k8s
         kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
         kustomize build . | kubectl apply -f -
         kubectl rollout status deployment/$DEPLOYMENT_NAME
         kubectl get services -o wide






                    
      
              
            
      
  
